import streamlit as st
import pandas as pd

# Language selector
language = st.selectbox("üåê Select Language / ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤", ["English", "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"])

# Text dictionaries
texts = {
    "English": {
        "title": "üíº HR Operation Calculator",
        "intro1": "What is HR Software?",
        "intro1_body": "HR software helps manage human resources tasks like hiring, payroll, performance tracking, and more. It streamlines operations and improves productivity.",
        "intro2": "What Does This Calculator Do?",
        "intro2_body": """
This calculator estimates how much HR automation can reduce HR staffing needs and salary costs based on your industry and company size.

A key factor in this calculation is **productivity gain** ‚Äî the expected improvement in efficiency when routine HR tasks are automated.

For example, if automation improves productivity by 30%, your company may require fewer HR staff to manage the same number of employees, resulting in cost savings.
""",
        "section_header": "üöÄ Let's Try It Out!",
        "input_caption": "Please enter your company data below:",
        "total_emp": "üë• Total number of employees",
        "avg_salary": "üí∞ Average monthly HR salary (THB)",
        "industry": "üè≠ Select your industry",
        "help": "Different industries have varying HR needs. Sectors with stringent regulatory requirements, like healthcare and finance, may need a higher HR-to-employee ratio to maintain compliance.",
        "productivity_help": """
**Adjusting Productivity Gain**

Use the slider below to estimate how much efficiency improves with HR automation.

- A **higher percentage** reflects greater improvements.
- A **lower percentage** reflects modest changes.

üí° If you're unsure, a **30% productivity gain** is a typical estimate for companies starting to adopt HR automation.
""",
        "slider_label": "‚öôÔ∏è Productivity gain from HR automation (%)",
        "button": "Calculate Results",
        "result_header": "üìä Results Summary",
        "before": "Before Automation",
        "after": "After Automation",
        "row_hr": "HR Needed",
        "row_cost": "Monthly Cost (THB)",
        "reduction": "HR reduction",
        "savings": "üéâ Monthly Savings",
        "explain_header": "üîç What This Means for You",
        "explain_body": """
By adopting HR automation, your organization can:

- **Reduce HR workload** and staffing needs by automating administrative tasks.
- **Enhance the employee experience**, compliance, and process speed.
- **Achieve HR cost-efficiency and save on salary costs.**
- **Gain insights and scale easily.**
- **Improve accuracy and reduce errors.**
- **Free HR for strategic work.**

üí° These improvements help modernize HR practices while supporting growth.
""",
        "source_caption": "üìò source: Industry HR-to-employee ratios are based on data from [HiBob ‚Äì HR to Employee Ratio](https://www.hibob.com/hr-glossary/hr-to-employee-ratio/)"
    },
    "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢": {
        "title": "üíº ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•",
        "intro1": "‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå HR ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?",
        "intro1_body": "‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå HR ‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏£‡∏´‡∏≤ ‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô",
        "intro2": "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á?",
        "intro2_body": """
‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô HR ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ù‡πà‡∏≤‡∏¢ HR

‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ñ‡∏∑‡∏≠ **‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û (Productivity Gain)** ‚Äî ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ã‡πâ‡∏≥‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û 30% ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô HR ‡∏ô‡πâ‡∏≠‡∏¢‡∏•‡∏á ‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
""",
        "section_header": "üöÄ ‡∏°‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞!",
        "input_caption": "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó:",
        "total_emp": "üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        "avg_salary": "üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏≠‡∏á HR ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏ö‡∏≤‡∏ó)",
        "industry": "üè≠ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        "help": "‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°",
        "productivity_help": """
**‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û**

‡πÉ‡∏ä‡πâ‡πÅ‡∏ñ‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ß‡πà‡∏≤‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏à‡∏∞‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ô‡∏≥‡∏£‡∏∞‡∏ö‡∏ö HR ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏°‡∏≤‡πÉ‡∏ä‡πâ

- ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏™‡∏π‡∏á = ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
- ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏ï‡πà‡∏≥ = ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢

üí° ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà **30%**
""",
        "slider_label": "‚öôÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö HR ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (%)",
        "button": "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå",
        "result_header": "üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå",
        "before": "‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö",
        "after": "‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö",
        "row_hr": "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô HR ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ",
        "row_cost": "‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏ö‡∏≤‡∏ó)",
        "reduction": "‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô HR",
        "savings": "üéâ ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
        "explain_header": "üîç ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì",
        "explain_body": """
‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏£‡∏∞‡∏ö‡∏ö HR ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ:

- **‡∏•‡∏î‡∏†‡∏≤‡∏£‡∏∞‡∏á‡∏≤‡∏ô HR** ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏î‡∏á‡∏≤‡∏ô‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô
- **‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô** ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô
- **‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô** ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£
- **‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å** ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
- **‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î** ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
- **‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡∏° HR ‡∏°‡∏∏‡πà‡∏á‡πÄ‡∏ô‡πâ‡∏ô‡∏á‡∏≤‡∏ô‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå**

üí° ‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏±‡∏í‡∏ô‡∏≤ HR ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
""",
        "source_caption": "üìò ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: Industry HR-to-employee ratios are based on data from [HiBob ‚Äì HR to Employee Ratio](https://www.hibob.com/hr-glossary/hr-to-employee-ratio/)"
    }
}

t = texts[language]

# Industry keys for calculation
industry_keys = [
    'general', 'leisure and hospitality', 'transport and utilities',
    'manufacturing', 'construction', 'health', 'education',
    'finance and insurance', 'business service', 'information', 'other services'
]

# Industry display names for each language
industry_names = {
    "English": [
        'general', 'leisure and hospitality', 'transport and utilities',
        'manufacturing', 'construction', 'health', 'education',
        'finance and insurance', 'business service', 'information', 'other services'
    ],
    "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢": [
        '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', '‡∏ô‡∏±‡∏ô‡∏ó‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', '‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏π‡∏õ‡πÇ‡∏†‡∏Ñ',
        '‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï', '‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á', '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û', '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
        '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à', '‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®', '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô ‡πÜ'
    ]
}

# UI
st.title(t["title"])
st.subheader(t["intro1"], divider=True)
st.write(t["intro1_body"])
st.subheader(t["intro2"], divider=True)
st.write(t["intro2_body"])

st.header(t["section_header"])
st.caption(t["input_caption"])

# Inputs
total_emp = st.number_input(t["total_emp"], min_value=2, value=500)
avg_hr_salary = st.number_input(t["avg_salary"], min_value=10000, value=35000)

# Industry selectbox with help tooltip (correct usage)
industry_display = st.selectbox(
    label=f"{t['industry']}",
    options=industry_names[language],
    help=t["help"]
)
industry = industry_keys[industry_names[language].index(industry_display)]

st.info(t["productivity_help"])
productivity_gain = st.slider(t["slider_label"], 0.0, 1.0, 0.3, 0.05)

# HR ratio data
hr_per_emp = {
    'general': 1,
    'leisure and hospitality': 1.91,
    'transport and utilities': 1.96,
    'manufacturing': 2.29,
    'construction': 2.38,
    'health': 2.71,
    'education': 2.78,
    'finance and insurance': 2.85,
    'business service': 2.92,
    'information': 2.97,
    'other services': 3.62
}

# Button & Calculation
if st.button(t["button"]):
    emp_per_hr = 100 / hr_per_emp[industry]
    total_hr = max(1, round(total_emp / emp_per_hr))
    cost_before = total_hr * avg_hr_salary
    total_hr_after = round(total_hr / (1 + productivity_gain))
    cost_after = total_hr_after * avg_hr_salary
    cost_saving = cost_before - cost_after
    reduction_percent = ((total_hr - total_hr_after) / total_hr) * 100 if total_hr else 0

    st.subheader(t["result_header"])
    results_df = pd.DataFrame({
        " ": [t["row_hr"], t["row_cost"]],
        t["before"]: [total_hr, f"{cost_before:,.0f}"],
        t["after"]: [total_hr_after, f"{cost_after:,.0f}"]
    })
    results_df.set_index(" ", inplace=True)
    st.table(results_df)

    st.write(f"**{t['reduction']}:** {reduction_percent:.1f}%")
    st.metric(label=t["savings"], value=f"{cost_saving:,.0f} THB")

    cost_diff = pd.DataFrame({"Before": [cost_before], "After": [cost_after]})
    melted = pd.melt(cost_diff, var_name="Stage", value_name="Cost (THB/month)")
    melted["Stage"] = pd.Categorical(melted["Stage"], categories=["Before", "After"], ordered=True)
    melted = melted.sort_values("Stage")
    st.bar_chart(melted, x="Stage", y="Cost (THB/month)")

    st.subheader(t["explain_header"])
    st.markdown(t["explain_body"])

    st.caption(t["source_caption"])
